- name: Configure no_log
  ansible.builtin.debug:
    msg: "Shown only with verbosity > 1"
    verbosity: 2
  register: verbose_check

- name: Check whether variables are defined
  ansible.builtin.fail:
    msg: "'{{ item }}' variable not defined!"
  when: (vars[item] is undefined) or (vars[item]| length == 0)
  with_items:
    - "target"

- name: Switch to values based on target
  ansible.builtin.include_vars:
    file: "{{ 'vars-' + lookup('vars', 'target') + '.yml' }}"

- name: Create instance of Key Vault
  azure_rm_keyvault:
    resource_group: "{{ vault_resource_group }}"
    vault_name: "{{ vault_name }}"
    enabled_for_deployment: false
    enabled_for_template_deployment: false
    enabled_for_disk_encryption: false
    enable_purge_protection: false
    enable_soft_delete: true
    sku:
      name: standard
    tags:
      owner: acm-sre
    access_policies:
      - tenant_id: 72f98888-8666-4144-9199-2d7cd0111111
        object_id: 99998888-8666-4144-9199-2d7cd0111111
        keys:
          - get
          - list



# - name: Retrieve our secrets from Azure Key Vault
#   azure_rm_keyvaultsecret_info:
#     vault_uri: "{{ vault_uri }}"
#     name: "acm-sre-{{ target }}-secrets"
#   register: secrets_from_kv
#   no_log: "{{ verbose_check is skipped }}"
# - name: Check if secret exists
#   ansible.builtin.fail:
#     msg: "Secret named acm-sre-{{ target }}-secrets not found in {{ vault_uri }}!"
#   when: secrets_from_kv.secrets | length == 0
# - name: Create temporary file
#   ansible.builtin.tempfile:
#     state: file
#     suffix: temp
#   register: tempfile_1
# - name: Copy to temporary file
#   ansible.builtin.copy:
#     content: "{{ secrets_from_kv.secrets[0].secret | b64decode }}"
#     dest: "{{ tempfile_1.path }}"
#   no_log: "{{ verbose_check is skipped }}"
# - name: Import file content into vars
#   ansible.builtin.include_vars:
#     file: "{{ tempfile_1.path }}"
#   no_log: "{{ verbose_check is skipped }}"
# - name: Remove the temporary file
#   ansible.builtin.file:
#     path: "{{ tempfile_1.path }}"
#     state: absent
#   when: tempfile_1.path is defined
